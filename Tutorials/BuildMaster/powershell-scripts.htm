<!DOCTYPE html>
<html>
<head>
   <title>Executing PowerShell Scripts During a BuildMaster Deployment</title>
   <meta name="keywords" content="buildmaster, scripts, powershell, actions" />
   <meta name="subheading" content="Builds and Integrations" />
    <meta name="product-name" content="BuildMaster" />
</head>
<body>
    <div class="intro">
        <p>
            PowerShell is a powerful scripting language that can be used to automate a variety of system's administration tasks.
            For users who already have PowerShell scripts as part of their deployment plan, BuildMaster makes it easy to
            incorporate running the PowerShell script as part of a deployment. BuildMaster supports both running an existing
            script file stored in BuildMaster's Script Repository, and also the ability to specify direct script text into an action.
        </p>
        <hr />
    </div>
    <div style="margin-bottom: 30px; padding-left: 30px;" class="info">
        <p>
            This tutorial was originally designed for BuildMaster v4. The screenshots and concepts may be a little out of date. An updated tutorial for
            <a href="/buildmaster/5.0">BuildMaster v5</a> is coming soon.
        </p>
    </div>
   <h4>BuildMaster Script Repository</h4>
   <p>
      If you are planning to run a script designed to be re-used and parameterized, we recommend using the Script Repository
      to store the script. For more information, see <a href="/support/tutorials/adding-a-powershell-or-shell-script-to-the-script-repository">
         Adding a PowerShell or Shell Script to the Script Repository.
      </a>
   </p>

   <h2 id=" step-one">Step 1: Add a PowerShell Action</h2>
   <p>
      Select <i>"Add New Action"</i> in your action group, search for ‘PowerShell’ then choose,
      the "Execute PowerShell Script" action:
   </p>
   <p>
      <img class="screenshot" src="/resources/tutorials/powershell-1.png" />
   </p>
   <p>
      For this example, I'll create a simple PowerShell script that deletes all but the 3 most recent log files in a directory:
   </p>
   <p>
      <pre class="tutorial-code"> get-childitem "C:\test\ps\logs" | sort-object $.CreatedDate -descending | select-object -skip 3 | remove-item</pre>
   </p>
    <h2 id=" step-two">Step 2: Execute PowerShell Script</h2>
    <p>
    When I save the action to my first environment in the workflow, I can kick-off a new build, and all but the 3
    latest log files will be removed.
</p>
   <p>
      <img class="screenshot" src="/resources/tutorials/powershell-2.png" />
   </p>
    <div id="related-content" class="content">
        <hr />
        <div class="button-set">
            <a href="/buildmaster/download" class="button">Download BuildMaster</a>
            <a href="/products" class="button">Other Inedo products</a>

        </div>
    </div>
   
</body>
</html>