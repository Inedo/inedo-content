<!DOCTYPE html>
<html>
<head>
    <meta name="id" content="1156" />
    <meta name="description" content="" />
    <meta name="keywords" content="buildmaster, upgrade-notes" />
    <title>BuildMaster 6.0 Upgrade Notes</title>
    <link type="text/css" rel="stylesheet" href="/support/documentation/_resources/documentation2.css" />

    <style type="text/css">
        .green {
            color: mediumseagreen;
        }

        .red {
            color: #c0504d;
        }

        code.type {
            color: rgb(43, 145, 175);
        }

        code.keyword {
            color: #0000ff;
        }

        kbd {
            -moz-border-radius: 3px;
            -moz-box-shadow: 0 1px 0 rgba(0,0,0,0.2),0 0 0 2px #fff inset;
            -webkit-border-radius: 3px;
            -webkit-box-shadow: 0 1px 0 rgba(0,0,0,0.2),0 0 0 2px #fff inset;
            background-color: #f7f7f7;
            border: 1px solid #ccc;
            border-radius: 3px;
            box-shadow: 0 1px 0 rgba(0,0,0,0.2),0 0 0 2px #fff inset;
            color: #333;
            display: inline-block;
            font-family: Arial,Helvetica,sans-serif;
            font-size: 11px;
            line-height: 1.4;
            margin: 0 .1em;
            padding: .1em .6em;
            text-shadow: 0 1px 0 #fff;
        }
    </style>
</head>
<body>

    <div class="attention technical">
        <p>
            Users who choose to upgrade an existing instance should upgrade to the latest v5.8 version first before
            upgrading to v6.0+.
        </p>
    </div>

    <h3>Upgrade Notes</h3>
    <p><a href="/buildmaster">BuildMaster 6.0</a> is a major version with the following changes:</p>
    <ul>
        <li>.NET 4.5.2+ is required (previous installs required v4.5.0+) (<span class="red">major configuration change</span>)</li>
        <li>Free edition now grants unlimited users, but all users are full administrators (<span class="red">major configuration change</span>) (<a href="#licensing">details</a>)</li>
        <li>Multiple license key support is removed in favor of a single license key (<span class="red">major configuration change</span>) (<a href="#license-keys">details</a>)</li>
        <li>SQL Server 2008 or later is required for new installations (<span class="red">major configuration change</span>)</li>
        <li>Environment assignments to Resource Credentials are enforced during plan execution (<span class="red">major configuration change</span>) (<a href="#credentials">details</a>)</li>
        <li>Legacy plan action-operation converters in extensions are removed</li>
        <li>
            Existing custom extensions must be recompiled against the latest SDK after upgrading to the Inedo.BuildMaster.SDK v6; see
            <a href="#upgrading-extensions">upgrading extensions</a> (<span class="red">major configuration change</span>)
        </li>
        <li>Legacy features are now hidden by configuration (<span class="red">major configuration change</span>) (<a href="#legacy">details</a>)</li>
        <li>Deployment plan templates are renamed to Modules</li>
        <li>New UI styling that still should be familiar to v5 users</li>
        <li>Application import &amp; export (<span class="green">new feature</span>)</li>
        <li><a href="/support/documentation/various/inedo-sdk/the-sdk">Inedo SDK</a> support (<span class="green">new feature</span>)</li>
        <li>Native API endpoints that were deprecated in v5 are removed</li>
    </ul>

    <h3 id="upgrading-extensions">Upgrading Extensions</h3>
    <p>
        Extensions in BuildMaster v6 can now be compiled against the <a href="/support/documentation/various/inedo-sdk/the-sdk">Inedo.SDK</a>. This
        also means that existing extensions need to be recompiled against the Inedo.BuildMaster.SDK 6.0, or if no legacy features are used, the latest Inedo.SDK package from NuGet.
    </p>
    <p class="attention technical">
        Because of this, <b>
            customers that still use any legacy plans, build importers, source control providers, or issue tracking providers must download the {ExtensionName}Legacy extension in addition
            to the {ExtensionName} extension counterpart
        </b>. The complete list of available legacy extensions is here:
    </p>
    <ul>
        <li>TFSLegacy         </li>
        <li>JiraLegacy        </li>
        <li>TeamCityLegacy    </li>
        <li>MercurialLegacy   </li>
        <li>JenkinsLegacy     </li>
        <li>FTPLegacy         </li>
        <li>AzureLegacy       </li>
        <li>AmazonLegacy      </li>
        <li>YouTrackLegacy    </li>
        <li>NuGetLegacy       </li>
        <li>WindowsLegacy     </li>
        <li>InedoCoreLegacy   </li>

    </ul>
    <h4>Which NuGet package should I choose?</h4>
    <p>
        Extensions that implement any legacy features (e.g. legacy plan actions, source control providers, issue tracker connections, database connections)
        must use v6 of the Inedo.BuildMaster.SDK. Database calls (i.e. <code>DB.</code>) or references to strongly-typed tables names (i.e. <code>Tables.</code>)
        are also not available in the Inedo.SDK since it is shared across multiple products. Support for shared/common objects (e.g. servers, roles) is supported via the
        <a href="/support/sdk-reference/inedosdk/Inedo/SDK"><code>SDK</code> class</a>.
    </p>
    <p>
        If no legacy features are used and there is no reliance on specific database calls, the extension should use the latest Inedo.SDK NuGet package. The
        complete list of Inedo.SDK supported classes can be found in the <a href="/support/sdk-reference/inedosdk">Inedo SDK Reference</a>.
    </p>

    <h4>Upgrading Extensions</h4>
    <p>
        Upgrading a pre-v6 extension (whether using the Inedo.BuildMaster.SDK or Inedo.SDK) requires the following:
    </p>
    <ul>
        <li>Target framework must be set to .NET 4.5.2 at a minimum</li>
        <li>For Inedo.BuildMaster.SDK: Upgrade the SDK NuGet package to v6.0.0 (this will also install Inedo.SDK as a dependency)</li>
        <li>For Inedo.BuildMaster.SDK or Inedo.SDK: Upgrade the Inedo.SDK to the latest version</li>
        <li>
            NuGet will automatically reference the following packages, ensure they are set to <b>CopyLocal=false</b> and <b>SpecificVersion=false</b> in the project properties:
            <ul>
                <li><code>BuildMaster.Web.Controls</code> <i>(Inedo.BuildMaster.SDK only)</i></li>
                <li><code>BuildMasterCore</code> <i>(Inedo.BuildMaster.SDK only)</i></li>
                <li><code>Inedo.Agents.Client</code></li>
                <li><code>Inedo.ExecutionEngine</code></li>
                <li><code>Inedo.SDK</code></li>
                <li><code>InedoLib</code></li>
            </ul>
        </li>
        <li>
            To resolve most compiler errors that you will receive on NuGet package upgrade, the <kbd>ALT</kbd>+<kbd>SHIFT</kbd>+<kbd>F10</kbd> keyboard shortcut
            that brings up the Light Bulb will quickly apply the appropriate <code>using</code> statements
        </li>
    </ul>

    <h5>Class &amp; Namespace Changes</h5>
    <ul>
        <li>
            <code class="type">PromotionContext</code> no longer implements <code class="type">IGenericBuildMasterContext</code>. While never documented as doing so,
            explicit casts to this interface must be removed
        </li>
        <li>
            All helper classes marked with <code class="type">System.ObsoleteAttribute</code> in the pre-v6 SDK have been removed in v6. Most replacements to <code>InedoLib.</code><code class="type">Util.</code> are found in <code>InedoLib.</code><code class="type">AH</code>
        </li>
        <li>
            <code>ILogger.Log()</code> extensions (e.g. <code>LogDebug</code>, <code>LogError</code>) accepted a format string in v4.X which was deprecated in v5.0, and now removed in v6.0;
            use <code class="keyword">string</code><code>.Format()</code> inside the <code>Log()</code> call instead
        </li>
    </ul>

    <table>
        <thead>
            <tr>
                <th>Pre-v6 Type Name</th>
                <th>v6 Replacement</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td><code class="type">PromotionRequirementBase</code></td>
                <td><code>Inedo.Extensibility.PromotionRequirements.</code><code class="type">PromotionRequirement</code></td>
            </tr>
            <tr>
                <td><code class="type">PromotionRequirementEditorBase</code></td>
                <td><code>Inedo.Extensibility.PromotionRequirements.</code><code class="type">PromotionRequirementEditor</code></td>
            </tr>
            <tr>
                <td><code class="type">DeprecatedInBuildMasterVersionAttribute</code></td>
                <td><code>System.</code><code class="type">ObsoleteAttribute</code></td>
            </tr>
            <tr>
                <td><code>Util.</code><code class="type">Agents</code></td>
                <td>Use <code>context.GetAgent()</code> instead</td>
            </tr>
            <tr>
                <td><code>Util.</code><code class="type">Artifacts</code></td>
                <td>Use <code class="type">Artifact</code> class</td>
            </tr>
            <tr>
                <td><code class="type">SourceControlFileFolderPicker</code></td>
                <td><code>Inedo.Web.</code><code class="type">ScmBrowserTextBox</code> or <code>Inedo.Web.</code><code class="type">FileBrowserTextBox</code></td>
            </tr>
            <tr>
                <td><code>Inedo.BuildMaster.</code><code class="type">OtterScriptSymbolComparer</code></td>
                <td><code>Inedo.ExecutionEngine.</code><code class="type">OtterScriptSymbolComparer</code></td>
            </tr>
            <tr>
                <td><code>Inedo.BuildMaster.Mapping.</code><code class="type">ICustomArgumentMapper</code></td>
                <td><code>Inedo.ExecutionEngine.Mapping.</code><code class="type">ICustomArgumentMapper</code></td>
            </tr>
            <tr>
                <td><code>Inedo.BuildMaster.IssueTrackerConnections.</code><code class="type">IssueSources</code></td>
                <td><code>Inedo.Extensibility.</code><code class="type">IssueSources</code></td>
            </tr>
            <tr>
                <td><code>Inedo.BuildMaster.IssueTrackerConnections.</code><code class="type">IIssueTrackerIssue</code></td>
                <td><code>Inedo.Extensibility.</code><code class="type">IIssueTrackerIssue</code></td>
            </tr>
            <tr>
                <td><code class="type">SuggestibleValue</code></td>
                <td><code>Inedo.Web.</code><code class="type">SuggestableValue</code> (note the spelling change)</td>
            </tr>
            <tr>
                <td><code>InedoLib.Util.WriteJson(<code class="type">TextWriter</code>, <code class="keyword">object</code>)</code></td>
                <td><code>Newtonsoft.Json.JsonSerializer.CreateDefault().Serialize(<code class="type">TextWriter</code>, <code class="keyword">object</code>)</code></td>
            </tr>
        </tbody>
    </table>

    <h3 id="credentials">Resource Credentials' Environment Usage</h3>
    <p>
        In this version, if a Resource Credential is assigned to an environment, any deployment targets that reference the credential <b>must</b>
        be associated with that environment, otherwise a run time error will occur.
    </p>

    <h3 id="legacy">Legacy Features</h3>
    <p>
        In this version, <a href="/support/kb/1144">legacy features</a> are hidden from the UI unless configured to be shown on the Advanced Settings page via the <b>Legacy.{FeatureName}</b>
        settings. Additionally, visiting the Administration &gt; Legacy Features Dashboard and running the detection mechanism will also set the configuration values automatically.
    </p>

    <h3 id="licensing">Free Edition Licensing Changes</h3>
    <p>
        Before v6.0, BuildMaster Free included 5 users, 10 applications, and 5 servers. Beginning with v6.0, BuildMaster Free is now unlimited users, applications, and servers,
        but all anonymous users are granted "view-only" privileges and all authenticated users act as full administrators (i.e. all users have every permission granted to them and restrictions are ignored).
    </p>
    <p class="attention technical">
        <b>Important:</b> any Free Edition users that expose their instance to the internet should be aware that this change effectively turns
        their BuildMaster instance into a public one, where applications, releases, and execution data can be viewed by any user with access to the web
        application.
    </p>
    <p>
        Any existing free users who are negatively
        affected by this change, visit the <a href="/buildmaster/pricing/legacy-license">contact form</a> and we can send you a new key that will effectively be a 5 user key with no server or application restrictions.
    </p>

    <h4 id="license-keys">Multiple License Key Support Removed</h4>
    <p class="attention technical">
        <b>Important:</b> Take note of your current license key before upgrading in case the latest license key added is not the key that is currently in use.
    </p>
    <p>
        Multiple license key support will be removed in this version. On upgrade, BuildMaster will use the latest-added &amp; activated
        license key as the single license key, and references to all others will be removed. If the wrong key was chosen as the single 
        key, you will have to log-in to <a href="https://my.inedo.com">MyInedo</a> if you did not take note of the current key.
    </p>

</body>
</html>