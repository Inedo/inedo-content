<!DOCTYPE html>
<html>
<head>
    <meta name="keywords" content="proget, case study, Abanca, security, automation, consistancy" />
    <meta name="publish-date" content="12/15/2016 10:00 AM" />
    <meta name="author" content="Olivia Glenn" />
    <title>Private Packages and ProGet Transform Software Deployments</title>
    <meta name="no-image" content="/blog/_resources/blog-banner.png" />
</head>
<body>
    <h1>
        Private packages and ProGet transform Abanca's software deployments.
    </h1>

    <p>
        Abanca has been able to automate the delivery of 35 applications and projects, with consistency and security, through a modern "package-based" 
        methodology.
    </p>
    <p>
        They've also been able to create their own extensions that integrates with ProGet for internal deploying, JSON editors, and ways to extend 
        the Visual Studio integrated internal development environment. With these extensions, and in light of their ambitious objectives, ProGet 
        will continue to provide consistency and security across the many projects and applications Abanca plans to deploy.
    </p>

    <a href="/case-studies/proget/abanca">
        <img style="margin: 20px 200px; border: 1px solid #5a85d7" src="/case-studies/proget/abanca/abanca-logo.png" />
    </a>
    <p>
        As a bank headquartered and primarily operating within the European Union, Abanca, like all Spanish banks, is subject to the rules, regulations, 
        and policies set forth by the EU. In 2007, the EU established the Directive in Payment Services (PSD). A revision to the PSD in August, 2016 
        required banks to create an API of their software, due by mid-2017. This in turn kicked off Abanca's use of ProGet in the form of their internal 
        "Morphe" project; a digitalization of the bank.
    </p>

    <p>
        In light of the fact that Abanca has many developers working on platforms for commercial and personal banking across multiple platforms 
        in both .Net and Java, the Abanca architecture team researched and elected 
        to adopt a modern package-based methodology for packaging and deploying code. One of the obvious benefits of this methodology is that 
        granting developers access to the vast community of third-party packages accelerates development. Coupled with a solid release process, 
        this package-based methodology can lead to releasing better software, faster, and more reliably.
    </p>
    <p>
        Of course, the package-based methodology isn't open and shut; it presented two subsequent challenges for them to address: for security reasons 
        a bank can't use public third-party packages because of the risk of a feed going down, or a package being deleted, so 
        they'd have to internalize them (ie. cache them locally in case of external outages), as well as address the matter of hosting feeds 
        for all of the different types of packages on disparate servers.
    </p>
    <p>
        With these challenges in mind, but steadfast on using packages, Abanca's architecture team set out to find a <strong>Universal Package Manager</strong>
        that privatizes the package feeds for users. As a predominantly .Net shop, ProGet was a natural choice.
    </p>
    <div style="margin: 40px 0;" class="button-set">
        <div style="padding: 10px 20px;" class="button">
            <a href="/case-studies/proget/abanca">Full Case Study</a>
        </div>
        <div style="padding: 10px 20px;" class="button">
            <a href="/professional-services">Need help implementing a DevOps culture?</a>
        </div>
    </div>

</body>
</html>