<!DOCTYPE html>
<html>
<head>
    <meta name="keywords" content="nuget,proget" />
    <meta name="publish-date" content="09/22/2016 1:00 PM" />
    <meta name="author" content="Devin Sweeney" />
    <title>DevOps in Action: Feed Replication supporting true collaboration  </title>
    <meta name="no-image" content="/blog/_resources/blog-banner2.png" />
</head>
<body>
    <h1>
        DevOps in Action: Feed Replication supporting true collaboration 
    </h1>
    <p>
        As mentioned in my <a href="/blog/multi-site-feed-replication-in-action">previous post</a> , multi-site replication is the mirroring of feeds across multiple ProGet instances. 
        Many of our <a href="/proget">ProGet</a> Enterprise users have a scenario that requires common components, yet their instances are in different geographic locations. 
        Recently, one of our users described their set up of replication, and how, although not geographically dispersed, they still found a huge benefit from implementing replication.  
    </p>
    <h2>
        One organization. Separate teams. Common packages.
    </h2>
    <p>
        Different teams within an organization may require separate instances of their package manager. 
        Take for example an industry that has strict regulations, or specific security processes, like banking. 
        A bank may have three separate instances of ProGet: Mortgages, Franchises, and Wealth Management, all “owned” by the corresponding business unit. 
        While all are located in the same place, their instances are kept separate for regulatory purposes.
        Common packages may still need to be accessed by the three business units (such as branding materials like logo files, style guidelines, etc.)  
        By creating a replicated feed across these instances, all business units will then have access to the necessary assets, while still being able to maintain their individual ProGet instances.
        If Franchises uploads a package to the replicated feed, Mortgages and Wealth Management will mirror that change, and will then also have access to the same package in their feed. 
       This example is reflected in the dark blue feed below. 
    </p>
    <p>
        <img src="/blog/_images/multifeed.gif" />
    </p>
    <p>
        They are also able to replicate between specific instances. This is especially useful when rolling out a feature one business unit at a time. In the above example, Franchises rolls out the feature first, then Mortgages, and eventually Wealth Management.
        However, say the organization has decided that Wealth Management is not ready to implement the feature, and therefore doesn't have access to the replicated feed. This is reflected in the Orange feed above. 
      
    </p>
    <h2>
        Feed Replication Across a Common Location
    </h2>
    <p>
        Regardless of why you need feed replication, it’s a useful feature that helps enterprises stay organized, and ensures stability and uniformity across all teams and locations. 
        It can be implemented in different ways, and with different use cases; 
        but can be critical to your software development process, and creating cohesion among multiple internal teams, or across geographically diverse offices. 
    </p>
    <p>
        Already a ProGet Basic user but want to take advantage of this feature? Reach out to <a href="/proget/pricing/request-quote">our team here</a> for an upgrade quote!
    </p>
    
</body>
</html>