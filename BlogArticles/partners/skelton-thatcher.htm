<!DOCTYPE html>
<html>
<head>
    <meta name="keywords" content="partners,devops" />
    <meta name="publish-date" content="12/07/2015 6:00 PM" />
    <meta name="author" content="Alex Papadimoulis" />
    <title>DevOps before it was DevOps: an interview with Skelton Thatcher</title>
	<meta name="full-image" content="/blog/_images/skelton-thatcher.png" />


</head>
<body>
<style type="text/css">
.Skelton {color: #ffffff; font-weight: bold; background-color: #4E596B; padding: 1px 3px; text-transform: uppercase}
.Thatcher {color: #ffffff; font-weight: bold; background-color: #1C8FE0; padding: 1px 3px; text-transform: uppercase}
.callout {font-size:26px; background-color:#666666; color:#ffffff; width:300px;padding: 8px;margin:5px; text-align:center;}
</style>
    <h1>Getting to know Matthew Skelton and Rob Thatcher</h1>

	<p>
        I was in London a few weeks ago, and had a chance to grab a pint with Matthew and Rob from <a href="https://skeltonthatcher.com/">Skelton Thatcher</a>, one of our
        <a href="https://inedo.com/training">Service &amp; Training Partners</a> based out of London, and I thought it'd be a great opportunity for a quick interview:
	</p>

	<p>
	<strong>
        I didn't have a good vision or reason for leaving the secure, corporate world to <a href="https://inedo.com/company/ceo">start Inedo</a>,
        what about you?  Why did you become consultants?</strong>
	</p>

	<p>
	<span class="Skelton">Matthew:</span> Easy, I wanted to start my own business!<br/>

        I teamed up with Rob to form Skelton Thatcher Consulting because we realized that we have a really good and rounded skillset between us: I started in the Dev world and Rob on the Ops side of things.

	</p>

	<p>
	<strong>So you were working to bring Dev and Ops together before DevOps became a thing! Rob you were the Ops?</strong>
	</p>

	<p>
	<span class="Thatcher">Rob:</span> Yeah, I have an Operations Technical background, with a bunch of management roles thrown in there.
	</p>

	<p>
	<strong>
        Working as consultants you get to interact with a lot of different groups, what do you see over and over again when working â€“ that someone who doesn't see a lot of different teams working might be surprised by?</strong>
	</p>

	<p>
	<span class="Thatcher">Rob:</span> The dichotomy of people gets me all the time. People have such a tremendous capacity for discovery, invention, innovation, and exploration, but at the same time have a really poor understanding of motivation - internal and external.
	</p>
	<div class="callout" style=" float:right;">
	"People have such a tremendous capacity for discovery, invention, innovation, and exploration..."
	</div>
	<p>
	<span class="Skelton">Matthew:</span> For me it's that so few people know how to use logging effectively. So many teams either have no logging at all, or just dump out a stack trace when an error occurs. Logging can be such an enabler for rapid diagnostics, and creating better software, but it has to be used well. <br/>
The worst part about this is that Logging is a solved problem. There is really no good reason for people not logging well. It's almost as if people and teams that would benefit hugely from a good logging practice feel that spending their valuable time on logging is beneath them; really it's crazy to me.
	</p>

	<p>
	<span class="Thatcher">Rob:</span> Oh, also so many problems that are labelled as 'technical challenges' are, in reality, just people having communication gaps. How people get so far without learning how to talk to other people is just shocking.
	</p>

	<p>
	<strong>Do those things ever get you down?</strong>
	</p>

	<div class="callout" style="float:right;text-align:center;">
	"There isn't a need to re-invent the wheel - you just have to use it better"
	<img src="/blog/_images/wheel.png" />
	</div>
	<p>
	<span class="Skelton">Matthew:</span> No not really, all those things are fixable problems.
	</p>

	<p>
	<span class="Thatcher">Rob:</span> There isn't a need to re-invent the wheel - you just have to use it better. We're in that position that precisely because we see these things again, and again (Ops doesn't talk to Dev, Dev doesn't talk to Q/A, etc) that we can be effective. The technical challenges of a project are always interesting and a big part of the 'fun' in consulting, but the human factor can't really be overstated.<br/>
Hopefully when we're done at a gig the clients have a smile of satisfaction, and have discovered that a frictionless experience is possible. And so far they always do.
	</p>

	<p>
	<span class="Skelton">Matthew:</span> Agreed, when we're walking away we try to make it so that we've illuminated the vision for the execs, and that we've inspired the teams on the ground with a meaningful backlog. Getting both those groups synced up can be really rewarding.
	</p>

	<p>
	<strong>It sounds like you focus on the people you're working with almost as much as the technologies.</strong>
	</p>

	<p>
	<span class="Thatcher">Rob:</span> It's true!
	</p>

	<p>
	<span class="Skelton">Matthew:</span> One time after a pretty intensive 10-day engagement with a large client we heard back from one of the team that our recommendations were the first to be actually worked on by the team after years of consultants coming in. We felt proud that we'd inspired the teams, and that when we walked out the door the plan we left didn't leave with us.
	</p>

	<p>
	<strong>Going from place to place you guys get exposed to a lot of different technologies and buzz-words, what do you think is seen as the hottest trend in DevOps right now?</strong>
	</p>
	<div class="callout" style="float:left;">
	"...you can save a lot of time, effort, pain, and money if you just try to fix the cause."
	</div>
	<p>
	<span class="Skelton">Matthew:</span> Undoubtedly "containerization" has got to be the hottest trend. Which, like a lot of trends, is now being over used. Very few organizations actually need containers; their real problems are organizational and process related.
	</p>

	<p>
	<span class="Thatcher">Rob:</span> Every time a new technology trend starts becoming main stream everyone wants to start playing with it because this technology will solve whatever issues they are having. It's treating the symptoms rather than the cause. And you can save a lot of time, effort, pain, and money if you just try to fix the cause.
	</p>

	<p>
	<strong>Right back to the human element I see... well if the people who make software don't change - do you see software as a whole changing very much?</strong>
	</p>

	<p>
	<span class="Skelton">Matthew:</span> I think software is being forced to change for the better: to be more secure; to operate better in live environments; and to better meet users expectations. It's become less and less acceptable for software to look good, but fall over from higher traffic, for example. Operational aspects are rightly becoming a key differentiator.
	</p>

	<p>
	<span class="Thatcher">Rob:</span> I agree that software is getting better in the ways that Matthew described, but I think it's simultaneously getting worse. There are instances of such cleanly executed software in terms of UX, performance, or Operability, but at the same time there are also hordes of software engineers out there turning out poor architecture, missing logging, inoperable systems, really the list can go on, and on.
	</p>

	<p>
	<strong>Ok - so containers are being over used, software is getting better and worse at the same time... Play prognosticator what's the next BIG thing that we'll be seeing?</strong>
	</p>

	<p>
	<span class="Skelton">Matthew:</span> The next big thing is going to have to deal with the massive influx of data from sensor devices, both static, like smart thermostats
        (do we really need those, by the way?), and moving like cars. We understand how to capture sensor data in an industrial context,
        but we don't yet know how to integrate the data at web scale to make it user-friendly.
	</p>

	<p>
	<span class="Thatcher">Rob:</span> Hmm, next big thing... Well I was brought up under the impression that by now I'd have a laser blaster, inter-stellar travel would be common,
        and that we've have anti-grav parties- literally 'dancing on the ceiling'. So that's how hard predicting what the next big thing will be.
	</p>

	<p>
	<span class="Skelton">Matthew:</span> I'm still waiting on my hover board.
	</p>

    <p>
        <span class="Thatcher">Rob:</span> Let's just hope they don't try writing the hover board OS in JavaScript...
    </p>
    <hr />

	<p>
        Matthew Skelton and Rob Thatcher have been helping organizations all over Europe with the type of personnel and technical hurdles faced in DevOps other large transformations.
        Check out their blog at <a href="https://skeltonthatcher.com/blog/">skeltonthatcher.com/blog</a>
    </p>

</body>
</html>
