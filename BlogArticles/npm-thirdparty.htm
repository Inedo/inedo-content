<!DOCTYPE html>
<html>
<head>
    <meta name="keywords" content="proget,npm" />
    <meta name="publish-date" content="03/23/2016 4:30 PM" />
    <meta name="author" content="Devin Sweeney" />
    <title>Why you absolutely need a private repository: A response to #npmgate</title>
    <meta name="no-image" content="/blog/_resources/blog-banner.png" />
</head>
<body>
    <h1>Why you absolutely need a private repository: A response to #npmgate </h1>
    <p>
        Many developers are experiencing major headaches as their entire project builds are broken: all because of <a href="https://github.com/azer/left-pad/blob/master/index.js">11 lines of JavaScript</a>. 
        If you’re a JavaScript/Node.js developer, you’re likely familiar with npm, and #npmgate.</p>
    
    <h2>#npmgate: the debacle that &ldquo;broke the internet&rdquo;</h2>

    <p>
        Npm is primarily used as an open source package repository manager for Node.js. 
        On Tuesday, an npm package author, Azer Ko&ccedil;ulu, decided to <a href="https://medium.com/@azerbike/i-ve-just-liberated-my-modules-9045c06be67c?source=bundle------open_source">unpublish all of his modules</a>.
        One of those modules, &ldquo;left-pad&rdquo; had over two million downloads a month, and was depended upon by countless popular packages.
        As such, Azer's deletion crippled many developers&rsquo; important applications and caused thousands of project builds to fail. 
    </p>
    <p>
        The Register has <a href="http://www.theregister.co.uk/2016/03/23/npm_left_pad_chaos/">covering the whole debacle</a>, and
        Reddit has some great <a href="https://www.reddit.com/r/programming/comments/4bjss2/an_11_line_npm_package_called_leftpad_with_only/">fallout and reaction</a> comments.
    </p>
    <p>
        This event is just one example of how relying on freely-available, publicly-hosted, third-party repositories for your crucial packages, dependencies, and assets can have a catastrophic impact on 
        the enterprise.
    </p>
    <h2>Get a Private Repository Already!</h2>

    <p>
        ProGet, or another Universal Package Manager, would have saved the hassle and the major headaches with local caching: developers wouldn't have even noticed builds breaking.
    </p>
    <p>
        ProGet allows you to connect to outside repositories (like npm) and cache a copy of your packages locally, allowing you to have complete control instead of blindly relying on a third party.
        Caching locally not only allows you to maintain the package in times of an outage (or in this case when it&rsquo;s been unpublished by the user), but also makes your life easier by making frequently used packages easily and readily available,
        thus decreasing possible downtime and making your builds more reliable.
    </p>

    <h2>ProGet&rsquo;s high availability: stability when you need it most</h2>

    <p>Whether more stability is desired or needed, ProGet&rsquo;s high availability architecture ensures constant access to all the vital components in your development process.
     Even during heavy load times, ProGet maintains functionality and preserves productivity, keeping enterprise level performance standards high. 
    Through its multi-node structure, ProGet provides a reliable, stable network with automatic failover with no single point of failure. In other words, you&rsquo;ll never have to worry about what will happen when npm, NuGet, etc. experience outages. 
    You&rsquo;ll be fine.</p>

    <p>Save yourself the future hassle and download <a href="http://inedo.com/proget/download">ProGet</a> today!</p>

    <p>&nbsp;</p>


</body>
</html>